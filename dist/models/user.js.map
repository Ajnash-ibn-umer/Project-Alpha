{
  "version": 3,
  "sources": ["../../src/models/user.ts"],
  "sourcesContent": ["import { Schema, model } from \"mongoose\"\nconst passportLocalMongoose = require('passport-local-mongoose');\n//add log as object\nconst user = new Schema({\n\n    // personal information\n    fullName: { type: String, required: true, minlength: 3, maxlength: 30 },\n    // @ts-ignore\n    username: { type: String, index: true, unique: [true,\"This user already exist\"], sparse: true, required: true, minlength: 3, maxlength: 30 },\n    profileImg: { type: String },\n    // @ts-ignore\n    email: { type: String, unique:[true,\"This user already exist\"], index: true, required: true },\n    password: { type: String, required: true, minlength: 8 },\n    mobile: { type: String, index: true, unique: true, sparse: true },\n    joined:{type:Date,default:Date.now()},\n    \n})\n\n// user.plugin(passportLocalMongoose);\nexport const userSchema = model('user', user) "],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA8B;AAC9B,MAAM,wBAAwB,QAAQ,yBAAyB;AAE/D,MAAM,OAAO,IAAI,uBAAO;AAAA;AAAA,EAGpB,UAAU,EAAE,MAAM,QAAQ,UAAU,MAAM,WAAW,GAAG,WAAW,GAAG;AAAA;AAAA,EAEtE,UAAU,EAAE,MAAM,QAAQ,OAAO,MAAM,QAAQ,CAAC,MAAK,yBAAyB,GAAG,QAAQ,MAAM,UAAU,MAAM,WAAW,GAAG,WAAW,GAAG;AAAA,EAC3I,YAAY,EAAE,MAAM,OAAO;AAAA;AAAA,EAE3B,OAAO,EAAE,MAAM,QAAQ,QAAO,CAAC,MAAK,yBAAyB,GAAG,OAAO,MAAM,UAAU,KAAK;AAAA,EAC5F,UAAU,EAAE,MAAM,QAAQ,UAAU,MAAM,WAAW,EAAE;AAAA,EACvD,QAAQ,EAAE,MAAM,QAAQ,OAAO,MAAM,QAAQ,MAAM,QAAQ,KAAK;AAAA,EAChE,QAAO,EAAC,MAAK,MAAK,SAAQ,KAAK,IAAI,EAAC;AAExC,CAAC;AAGM,MAAM,iBAAa,uBAAM,QAAQ,IAAI;",
  "names": []
}
