{
  "version": 3,
  "sources": ["../src/index.ts"],
  "sourcesContent": ["// modules\nimport express from 'express'\nimport mongoose from 'mongoose'\nimport bodyParser from 'body-parser'\nimport helmet from 'helmet'\n// local modules\nconst session = require('express-session');  // session middleware\nconst passport = require('passport');  // authentication\nconst connectEnsureLogin = require('connect-ensure-login'); //authorization\nimport fs from 'fs'\nimport path from 'path'\nimport { DB, PORT } from './config/variables'\nimport userRouter from './routes/userRouters'\nimport { userSchema } from './models/user';\n\n// config\nconst app = express()\n//--------\n// app.use(cors())\napp.use(express.json());\napp.use(helmet());\napp.use(express.urlencoded({ extended: true }))\napp.use('/user',userRouter)\n// swagger configuration\n\n\napp.post('/ping',(req,res)=>{\nres.status(200).json({message:'hai ping'})\n    \n    \n})\n\n\n\n\n\n\n\n// database connection\n\nconsole.log({DB});\n\nmongoose.connect(DB).catch(err=>{\n    console.log(\"database configuration error\",err);\n    \n})\n\n\n\n//server connection\napp.listen(PORT, () => {\n    console.log(`server running in port ${PORT} `);\n\n})"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AACA,qBAAoB;AACpB,sBAAqB;AAErB,oBAAmB;AAOnB,uBAAyB;AACzB,yBAAuB;AANvB,MAAM,UAAU,QAAQ,iBAAiB;AACzC,MAAM,WAAW,QAAQ,UAAU;AACnC,MAAM,qBAAqB,QAAQ,sBAAsB;AAQzD,MAAM,UAAM,eAAAA,SAAQ;AAGpB,IAAI,IAAI,eAAAA,QAAQ,KAAK,CAAC;AACtB,IAAI,QAAI,cAAAC,SAAO,CAAC;AAChB,IAAI,IAAI,eAAAD,QAAQ,WAAW,EAAE,UAAU,KAAK,CAAC,CAAC;AAC9C,IAAI,IAAI,SAAQ,mBAAAE,OAAU;AAI1B,IAAI,KAAK,SAAQ,CAAC,KAAI,QAAM;AAC5B,MAAI,OAAO,GAAG,EAAE,KAAK,EAAC,SAAQ,WAAU,CAAC;AAGzC,CAAC;AAUD,QAAQ,IAAI,EAAC,wBAAE,CAAC;AAEhB,gBAAAC,QAAS,QAAQ,mBAAE,EAAE,MAAM,SAAK;AAC5B,UAAQ,IAAI,gCAA+B,GAAG;AAElD,CAAC;AAKD,IAAI,OAAO,uBAAM,MAAM;AACnB,UAAQ,IAAI,0BAA0B,qBAAI,GAAG;AAEjD,CAAC;",
  "names": ["express", "helmet", "userRouter", "mongoose"]
}
